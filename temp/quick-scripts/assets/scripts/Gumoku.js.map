{"version":3,"sources":["Gumoku.js"],"names":["cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","chessList","node","gameState","whiteChessFrame","SpriteFrame","blackChessFrame","lastChess","Node","visible","maskLayoutNode","initiateChessBoard","active","$this","y","x","newChess","instantiate","addChild","setPosition","v2","getComponent","tag","on","EventType","TOUCH_END","event","thisNode","target","Sprite","spriteFrame","judgeOver","push","console","log","currentPlayer","lastSpriteFrame","horizental","i","frame","showWinLayout","vertical","index","leftSlash","f","rightSlash","player","getChildByName","Label","string","replayGomuku","onLoad","start"],"mappings":"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","file":"Gumoku.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        chessPrefab:{\r\n            default:null,\r\n            type:cc.Prefab\r\n        },\r\n        chessList:{\r\n            default:[],\r\n            type:[cc.node]\r\n        },\r\n        gameState : \"white\",\r\n        whiteChessFrame:{\r\n            default:null,\r\n            type:cc.SpriteFrame\r\n        },\r\n        blackChessFrame:{\r\n            default:null,\r\n            type:cc.SpriteFrame\r\n        },\r\n        lastChess:{\r\n            default:null,\r\n            type:cc.Node,\r\n            visible:false\r\n        },\r\n        maskLayoutNode:{\r\n            default:null,\r\n            type:cc.Node,            \r\n        }\r\n    },\r\n    //初始化棋盘\r\n    initiateChessBoard(){\r\n        //\r\n        this.maskLayoutNode.active = false;\r\n        var $this = this;\r\n        for(var y = 0 ;y < 15; y++){//纵坐标\r\n            for(var x = 0;x < 15; x++){//横坐标\r\n                var newChess = cc.instantiate(this.chessPrefab);\r\n                this.node.addChild(newChess);\r\n                newChess.setPosition(cc.v2(x*40+20,y*40+20));\r\n                newChess.getComponent('chess').tag = y*15+x;//tag除以15，商为Y坐标，余数为x坐标\r\n                newChess.on(cc.Node.EventType.TOUCH_END,function(event){\r\n                    var thisNode = event.target.getComponent(cc.Sprite);\r\n                    if($this.gameState ==='white' && thisNode.spriteFrame == null){\r\n                        thisNode.spriteFrame = $this.whiteChessFrame;\r\n                        $this.gameState = 'black';\r\n                        $this.lastChess = thisNode;\r\n                        $this.judgeOver();\r\n                    }else if($this.gameState=='black' && thisNode.spriteFrame == null){\r\n                        thisNode.spriteFrame = $this.blackChessFrame;\r\n                        $this.gameState = 'white';\r\n                        $this.lastChess = thisNode;\r\n                        $this.judgeOver();\r\n                    }                    \r\n                });\r\n                this.chessList.push(newChess);\r\n            }\r\n        }\r\n    },\r\n    //判定胜负\r\n    judgeOver(){\r\n        console.log(\"开始判定胜负\");\r\n        var currentPlayer = this.gameState == 'white'?'black':'white';\r\n        var tag = this.lastChess.getComponent('chess').tag\r\n        var x =  tag % 15;\r\n        var y = (tag-x) / 15;\r\n        console.log(\"X = \"+x+\";Y = \"+y);\r\n        var lastSpriteFrame = this.lastChess.getComponent(cc.Sprite).spriteFrame;\r\n        //横向\r\n        \r\n        var horizental = 0;\r\n        \r\n        for(var i = x-4;i<=x+4;i++){//前四后四一共9颗子\r\n            if(i>=0 && i<15){\r\n                // this.chessList[y*15+i].getComponent(cc.Sprite).spriteFrame = this.whiteChessFrame;\r\n                \r\n                var frame = this.chessList[y*15+i].getComponent(cc.Sprite).spriteFrame;\r\n                console.log(i+\" horizental.equals = \"+(frame == lastSpriteFrame),\"lastSprite\",lastSpriteFrame,\"current\",frame);\r\n                if(lastSpriteFrame == frame){\r\n                    horizental++;//连子数量\r\n                    console.log(currentPlayer + '横向连子数量:'+horizental);\r\n                    if(horizental>=5){\r\n                        this.showWinLayout(currentPlayer);\r\n                        return;\r\n                    }\r\n                }else{\r\n                    horizental = 0;//重置连子数量\r\n                }                \r\n            }\r\n        }\r\n        \r\n        \r\n        //纵向\r\n        var vertical = 0;\r\n        for(var i=y-4;i<=y+4;i++){\r\n            if(i>=0 && i<15){\r\n                var index = i*15+x;\r\n                // this.chessList[index].getComponent(cc.Sprite).spriteFrame = this.whiteChessFrame;\r\n                \r\n                var frame = this.chessList[index].getComponent(cc.Sprite).spriteFrame;\r\n                if(lastSpriteFrame == frame){\r\n                    vertical++;//连子数量\r\n                    console.log(currentPlayer+\"纵向连子数量:\"+vertical);\r\n                    if(vertical >=5){\r\n                        this.showWinLayout(currentPlayer);\r\n                        return;\r\n                    }\r\n                }else{\r\n                    vertical = 0;//重置连子数量\r\n                }\r\n                \r\n            }\r\n        }\r\n        \r\n        //左斜（第一与第三象限）\r\n        \r\n        var leftSlash = 0\r\n        var f = y-x;//斜率K = (y1-y)/(x1-x); 此k=1，y1=x1+y-x; 设f = y-x,那么y1 = x1+f，z = y*15+x;遍历x,z = (f+x)*15+x\r\n        for(var i=0;i<15;i++){\r\n            if(f+i<0 || f+i>14){\r\n                continue;\r\n            }\r\n            // this.chessList[(f+i)*15+i].getComponent(cc.Sprite).spriteFrame = this.whiteChessFrame;\r\n            \r\n            var frame = this.chessList[(f+i)*15+i].getComponent(cc.Sprite).spriteFrame;\r\n            if(frame == lastSpriteFrame){\r\n                leftSlash++;\r\n                console.log(currentPlayer+\"左斜连子数量:\"+leftSlash);\r\n                if(leftSlash>=5){\r\n                    this.showWinLayout(currentPlayer);\r\n                    return;\r\n                }\r\n            }else{\r\n                leftSlash= 0;\r\n            }\r\n            \r\n        }\r\n        \r\n        //右斜\r\n        var rightSlash = 0;\r\n        f = y+x;\r\n        for(var i =0;i<15;i++){\r\n            if(f-i < 0 || f-i > 14){ continue; } \r\n            // this.chessList[(f-i)*15+i].getComponent(cc.Sprite).spriteFrame = this.whiteChessFrame;\r\n            \r\n            var frame = this.chessList[(f-i)*15+i].getComponent(cc.Sprite).spriteFrame;\r\n            if(frame == lastSpriteFrame){\r\n                rightSlash ++;\r\n                console.log(currentPlayer+\"右斜连子数量:\"+rightSlash);\r\n                if(rightSlash>=5){\r\n                    this.showWinLayout(currentPlayer);\r\n                    return;\r\n                }\r\n            }else{\r\n                rightSlash= 0;\r\n            }            \r\n        }\r\n        \r\n        \r\n    },\r\n    //展示胜负结果（player = 'black' or 'white'）\r\n    showWinLayout(player){\r\n        this.maskLayoutNode.getChildByName(\"judgeResult\").getComponent(cc.Label).string = player + \" win !\";\r\n        this.maskLayoutNode.active = true;\r\n        console.log(player + \" win !\");\r\n    },\r\n    replayGomuku(){\r\n        this.maskLayoutNode.active=false;\r\n        for(var i in this.chessList){\r\n            this.chessList[i].getComponent(cc.Sprite).spriteFrame = null;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.initiateChessBoard();\r\n\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}